
macro VLE_TEST(n) = \
	if n < 0 then \
		CR[0]<LT..LT> = 1; \
	else \
		if n == 0 then CR[0]<EQ..EQ> = 1; \
		else CR[0]<GT..GT> = 1; \
		endif; \
	endif


// ===== VLE 16-bits ======

op vle16_list =
	se_add
	

macro vle_index(i) = \
	if i < 8 then i else i + 16 endif

mode vle_idx(idx: card(4)) = GPR[vle_index(idx)]
	syntax = format("r%d", vle_index(idx))
	image = format("%4b", idx)
	index = vle_index(idx)

op se_add(rx: vle_idx, ry: vle_idx)
	syntax = format("se_add %s,%s", rx.syntax, ry.syntax)
	image = format("000001 00 %s %s", rx.image, ry.image)
	action = { rx = rx + ry; }



// ====== VLE 32-bits ======

mode vle32_idx(idx: card(5)) = GPR[idx]
	syntax = format("r%d", idx)
	image = format("%5b", idx)
	index = idx

op vle32_list =
	e_add16i |
	e_add2i_

op e_add16i(rD: vle32_idx, rA: vle32_idx, SI: int(16))
	syntax = format("e_add16i %s, %s, %d", rD.syntax, rA.syntax, SI)
	image = format("000111 %s %s %16b", rD.image, rA.image, SI)
	action = { rD = rA + SI; }

op e_add2i_(rA: vle32_idx, SI: int(16))
	syntax = format("e_add2i. %s, %d",  rA.syntax, SI)
	image = format("011100 %5b %s 10001 %11b", SI<15..11>, rA.image, SI<10..0>)
	action = {
		TMP_WORD = rA + SI;
		VLE_TEST(TMP_WORD);
		rA = TMP_WORD;
	} 
